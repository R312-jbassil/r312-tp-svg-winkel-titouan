---
import Layout from "../layouts/Layout.astro";
import { ui } from "../i18n/ui.js";

const locale =
    Astro.locals.lang === "en" || Astro.locals.lang === "fr"
        ? Astro.locals.lang
        : "en";
---

<Layout>
    <div class="flex flex-col gap-6 p-6">
        <!-- Entrée du prompt -->
        <div class="card bg-base-200 shadow-xl p-4">
            <h2 class="text-xl font-bold mb-2">
                {ui[locale].generator.promptLabel}
            </h2>
            <textarea
                id="user-prompt"
                placeholder="Describe the SVG you want..."
                class="textarea textarea-bordered w-full h-32 mb-4"></textarea>
            <button id="generate-button" class="btn btn-primary">
                {ui[locale].generator.generateButton}
            </button>
        </div>

        <!-- Code SVG généré -->
        <div class="card bg-base-200 shadow-xl p-4">
            <h2 class="text-xl font-bold mb-2">
                {ui[locale].generator.codePlaceholder}
            </h2>
            <pre
                id="svg-output"
                class="bg-base-300 p-4 rounded-lg overflow-auto text-sm">
            </pre>
        </div>

        <!-- SVG rendu -->
        <div class="card bg-base-200 shadow-xl p-4 flex flex-col items-center">
            <h2 class="text-xl font-bold mb-2">
                {ui[locale].generator.contentPlaceholder}
            </h2>
            <div
                id="svg-container"
                class="bg-base-100 p-4 rounded-lg w-full h-64 flex items-center justify-center"
            >
            </div>
        </div>
    </div>
</Layout>

<script>
    //@ts-nocheck
    const generateButton = document.getElementById("generate-button");

    async function generateSVG(prompt) {
        const res = await fetch("/api/generate-svg", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ prompt }),
        });

        if (!res.ok) {
            const text = await res.text();
            return `<p class="text-red-500">Error: ${text}</p>`;
        }

        const data = await res.json();
        return data.svg || `<p class="text-red-500">${data.error}</p>`;
    }

    async function handleSubmit() {
        const prompt = document.getElementById("user-prompt")?.value.trim();
        if (!prompt) return;

        const svgContainer = document.getElementById("svg-container");
        const svgOutput = document.getElementById("svg-output");

        svgContainer.innerHTML = `<span class="loading loading-ring loading-xl"></span>`;
        generateButton.disabled = true;

        try {
            const svgCode = await generateSVG(prompt);
            svgOutput.textContent = svgCode;
            svgContainer.innerHTML = svgCode;
        } catch (err) {
            svgContainer.innerHTML = `<p class="text-red-500">${err.message}</p>`;
        } finally {
            generateButton.disabled = false;
        }
    }

    generateButton?.addEventListener("click", handleSubmit);
</script>
