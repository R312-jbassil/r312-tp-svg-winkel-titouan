---
import Layout from "../layouts/Layout.astro";
import { ui } from "../i18n/ui.js";

// Récupérer la langue définie par le middleware, fallback sur "en"
const locale =
    Astro.locals.lang === "en" || Astro.locals.lang === "fr"
        ? Astro.locals.lang
        : "en";

console.log("Locale in generator:", locale);
---

<Layout>
    <div class="flex flex-col gap-6 p-6">
        <!-- Zone d'entrée du prompt -->
        <div class="card bg-base-200 shadow-xl p-4">
            <h2 id="prompt-label" class="text-xl font-bold mb-2">
                {ui[locale].generator.promptLabel}
            </h2>
            <textarea
                id="user-prompt"
                placeholder="Describe the SVG you want..."
                class="textarea textarea-bordered w-full h-32 mb-4"></textarea>
            <button id="generate-button" class="btn btn-primary">
                {ui[locale].generator.generateButton}
            </button>
        </div>

        <!-- Zone pour afficher le code généré -->
        <div class="card bg-base-200 shadow-xl p-4">
            <h2 id="code-title" class="text-xl font-bold mb-2">
                {ui[locale].generator.codePlaceholder}
            </h2>
            <pre
                id="svg-output"
                class="bg-base-300 p-4 rounded-lg overflow-auto text-sm">
        <!-- {ui[locale].generator.codePlaceholder} -->
      </pre>
        </div>

        <!-- Zone pour afficher le SVG rendu -->
        <div class="card bg-base-200 shadow-xl p-4 flex flex-col items-center">
            <h2 id="content-title" class="text-xl font-bold mb-2">
                {ui[locale].generator.contentPlaceholder}
            </h2>
            <div
                id="svg-container"
                class="bg-base-100 p-4 rounded-lg w-full h-64 flex items-center justify-center"
            >
                <!-- {ui[locale].generator.contentPlaceholder} -->
            </div>
        </div>
    </div>
</Layout>

<script>
    //@ts-nocheck

    // --- Génération SVG ---
    const generateButton = document.getElementById("generate-button");

    async function generateSVG(prompt) {
        const res = await fetch("/api/generateSVG", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ prompt }),
        });
        const data = await res.json();
        return data.svg;
    }

    async function handleSubmit() {
        const promptElement = document.getElementById("user-prompt");
        const svgContainer = document.getElementById("svg-container");
        const svgOutput = document.getElementById("svg-output");

        const prompt = promptElement ? promptElement.value : "";

        // Ajout du spinner et désactivation du bouton
        svgContainer.innerHTML = `<span class="loading loading-ring loading-xl"></span>`;
        generateButton.disabled = true;

        const svgCode = await generateSVG(prompt);

        svgOutput.textContent = svgCode;
        svgContainer.innerHTML = svgCode;

        generateButton.disabled = false;
    }

    if (generateButton) {
        generateButton.addEventListener("click", handleSubmit);
    }
</script>
